/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase() :
    radioButtonSelectedCallback(this, &screenViewBase::radioButtonSelectedCallbackHandler)
{

    __background.setPosition(0, 0, 320, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_CARBON_FIBRE_ID));
    tiledImage1.setPosition(0, 0, 320, 480);
    tiledImage1.setOffset(0, 0);

    radioButtonWrite.setXY(57, 63);
    radioButtonWrite.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_INACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_NORMAL_ID));
    radioButtonWrite.setSelected(true);
    radioButtonWrite.setDeselectionEnabled(false);

    radioButtonRead.setXY(218, 63);
    radioButtonRead.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_INACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_NORMAL_ID));
    radioButtonRead.setSelected(false);
    radioButtonRead.setDeselectionEnabled(false);

    textArea1.setPosition(48, 369, 225, 82);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PPFX));

    buttonLabelText.setPosition(0, 27, 320, 24);
    buttonLabelText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonLabelText.setLinespacing(0);
    buttonLabelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HL70));

    add(__background);
    add(tiledImage1);
    add(radioButtonWrite);
    add(radioButtonRead);
    add(textArea1);
    add(buttonLabelText);
    radioButtonGroup1.add(radioButtonWrite);
    radioButtonGroup1.add(radioButtonRead);
    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
}

void screenViewBase::setupScreen()
{

}

void screenViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonWrite)
    {
        //writePressed
        //When radioButtonWrite selected call virtual function
        //Call writeRadioCallback
        writeRadioCallback();
    }
    else if (&src == &radioButtonRead)
    {
        //readPressed
        //When radioButtonRead selected call virtual function
        //Call readRadioCallback
        readRadioCallback();
    }
}
